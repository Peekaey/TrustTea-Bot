// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model FCMember {
  Id              Int      @id @default(autoincrement())
  DiscordUid      String   @unique
  DiscordUsername String
  LodestoneId     String      @unique
  DateCreated     DateTime @default(now())
  AccountMatched  Boolean
  DiscordGuildUid String
  // Relations
  nameChanges   NameHistory[]
  FCGuildServer   FCGuildServer? @relation(fields: [DiscordGuildUid], references: [DiscordGuildUid])

}

model NameHistory {
  Id          Int      @id @default(autoincrement())
  DiscordUid  String
  FirstName   String
  LastName    String
  DateChanged DateTime @default(now())

  FCMember FCMember @relation(fields: [DiscordUid], references: [DiscordUid])
}

model FCGuildServer {
  Id              Int      @id @default(autoincrement())
  DiscordGuildUid String   @unique
  FreeCompanyId   String   @unique
  DateCreated     DateTime @default(now())

  // Relations
  members         FCMember[] // List of FCMember records
  GuildAdminRole  FCGuildRole[]
}

model FCGuildRole {
  Id              Int      @id @default(autoincrement())
  RoleId          String   @unique
  DiscordGuildUid String
  DateCreated     DateTime @default(now())
  RoleType        Role

  // Relations
  FCGuildServer FCGuildServer @relation(fields: [DiscordGuildUid], references: [DiscordGuildUid])
}

enum Role {
  FCMEMBER
  FCADMIN
}
